{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zcczz\\\\Desktop\\\\contact book\\\\contactbook\\\\frontend\\\\src\\\\components\\\\forms\\\\edit-form.js\";\nimport React, { useState, useEffect } from 'react';\nimport \"./forms.css\";\nimport { connect } from 'react-redux';\nimport { uploadContactItem, clearContactItem } from '../../redux/actions';\nconst inputFields = {\n  name: '',\n  email: '',\n  phone: '',\n  contact_type: 'личный'\n};\n\nconst EditForm = ({\n  clearContactItem,\n  name,\n  email,\n  id,\n  phone,\n  contact_type\n}) => {\n  // const contact = { name, email, contact_type, phone }\n  const [inputs, setInputs] = useState(inputFields);\n  useEffect(() => {\n    console.log(name);\n    setInputs({\n      name,\n      email,\n      id,\n      phone,\n      contact_type\n    });\n  }, [name, email, id, phone, contact_type]);\n\n  const handleFormSubmit = e => {\n    e.preventDefault(); // uploadContactItem(inputs);\n    // setInputs()\n  };\n\n  const handleInputChange = e => {\n    console.log(inputs);\n    setInputs({ ...inputs,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleClearButton = () => {\n    clearContactItem;\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"home-page__el home-page-form\",\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"home-page-form__heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\"), /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    type: \"text\",\n    className: \"home-page-form__input\",\n    placeholder: \"\\u0418\\u043C\\u044F\",\n    name: \"name\",\n    value: inputs.name,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    className: \"home-page-form__input\",\n    placeholder: \"Email\",\n    name: \"email\",\n    value: inputs.email,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    type: \"text\",\n    className: \"home-page-form__input\",\n    value: inputs.phone,\n    placeholder: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n    name: \"phone\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"\\u0422\\u0438\\u043F \\u043A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\\u0430\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"home-page-form__label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"\\u041B\\u0438\\u0447\\u043D\\u044B\\u0439\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"contact_type\",\n    value: \"\\u043B\\u0438\\u0447\\u043D\\u044B\\u0439\",\n    checked: inputs.contact_type === 'личный',\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"contact_type\",\n    checked: inputs.contact_type === 'рабочий',\n    value: \"\\u0440\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClearButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\"));\n};\n\nconst mapStateToProps = state => {\n  const {\n    contactList,\n    id\n  } = state.contacts;\n\n  for (let contact of contactList) {\n    if (contact.id === id) {\n      return contact;\n    }\n  }\n};\n\nexport default connect(mapStateToProps, {\n  clearContactItem\n})(EditForm);","map":{"version":3,"sources":["C:/Users/zcczz/Desktop/contact book/contactbook/frontend/src/components/forms/edit-form.js"],"names":["React","useState","useEffect","connect","uploadContactItem","clearContactItem","inputFields","name","email","phone","contact_type","EditForm","id","inputs","setInputs","console","log","handleFormSubmit","e","preventDefault","handleInputChange","target","value","handleClearButton","mapStateToProps","state","contactList","contacts","contact"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"./forms.css\";\r\nimport { connect } from 'react-redux';\r\nimport { uploadContactItem, clearContactItem } from '../../redux/actions';\r\n\r\nconst inputFields = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    contact_type: 'личный'\r\n}\r\n\r\nconst EditForm = ({ clearContactItem, name, email, id, phone, contact_type }) => {\r\n    // const contact = { name, email, contact_type, phone }\r\n    const [inputs, setInputs] = useState(inputFields);\r\n    useEffect(() => {\r\n        console.log(name)\r\n        setInputs({name, email, id, phone, contact_type})\r\n    },[name, email, id, phone, contact_type])\r\n    const handleFormSubmit = e => {\r\n        e.preventDefault();\r\n        // uploadContactItem(inputs);\r\n        // setInputs()\r\n    }\r\n    const handleInputChange = e => {\r\n        console.log(inputs)\r\n        setInputs({\r\n            ...inputs,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleClearButton = () =>{\r\n        clearContactItem\r\n    }\r\n    return (\r\n        <form\r\n            className=\"home-page__el home-page-form\"\r\n            onSubmit={handleFormSubmit}>\r\n            <h2 className=\"home-page-form__heading\">Добавить контакт</h2>\r\n            <input\r\n                required\r\n                type=\"text\"\r\n                className=\"home-page-form__input\"\r\n                placeholder=\"Имя\"\r\n                name=\"name\"\r\n                value={inputs.name}\r\n                onChange={handleInputChange} />\r\n            <input\r\n                type=\"email\"\r\n                className=\"home-page-form__input\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                value={inputs.email}\r\n                onChange={handleInputChange} />\r\n            <input\r\n                required type=\"text\"\r\n                className=\"home-page-form__input\"\r\n                value={inputs.phone}\r\n                placeholder=\"Номер телефона\" name=\"phone\"\r\n                onChange={handleInputChange} />\r\n            <h3>Тип контакта</h3>\r\n            <label className=\"home-page-form__label\">\r\n                Личный\r\n                    <input\r\n                    type=\"radio\" name=\"contact_type\" value=\"личный\"\r\n                    checked={inputs.contact_type === 'личный'}\r\n                    onChange={handleInputChange} />\r\n            </label>\r\n            <label>Рабочий\r\n                    <input\r\n                    type=\"radio\" name=\"contact_type\"\r\n                    checked={inputs.contact_type === 'рабочий'}\r\n                    value=\"рабочий\" onChange={handleInputChange} />\r\n            </label>\r\n            <button>Редактировать контакт</button>\r\n            <button onClick={handleClearButton}>Очистить</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { contactList, id } = state.contacts;\r\n    for (let contact of contactList) {\r\n        if (contact.id === id) {\r\n            return contact\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { clearContactItem })(EditForm);"]},"metadata":{},"sourceType":"module"}