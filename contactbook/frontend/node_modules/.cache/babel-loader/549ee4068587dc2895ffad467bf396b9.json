{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zcczz\\\\Desktop\\\\contact book\\\\contactbook\\\\frontend\\\\src\\\\components\\\\app\\\\App.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport Header from '../header/header';\nimport LoginForm from '../login-page/login-page';\nimport './app.css';\nimport { connect } from 'react-redux';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport PrivateRoute from '../private-route/private-route';\nimport RegisterForm from '../register-page/register-page';\nimport { getUser } from '../../redux/actions';\nimport HomePage from '../home-page/home-page';\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic';\nconst options = {\n  // you can also just use 'bottom center'\n  position: positions.BOTTOM_CENTER,\n  timeout: 5000,\n  offset: '30px',\n  // you can also just use 'scale'\n  transition: transitions.SCALE\n};\n\nconst App = ({\n  isAuthenticated,\n  getUser\n}) => {\n  useEffect(() => {\n    getUser();\n  }, [getUser]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Provider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = ({\n  auth\n}) => ({\n  isAuthenticated: auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  getUser\n})(App);","map":{"version":3,"sources":["C:/Users/zcczz/Desktop/contact book/contactbook/frontend/src/components/app/App.js"],"names":["React","Fragment","useEffect","Header","LoginForm","connect","HashRouter","Router","Route","Switch","PrivateRoute","RegisterForm","getUser","HomePage","transitions","positions","Provider","AlertProvider","AlertTemplate","options","position","BOTTOM_CENTER","timeout","offset","transition","SCALE","App","isAuthenticated","mapStateToProps","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAU,IAAIC,MAAvB,EAA+BC,KAA/B,EAAsCC,MAAtC,QAAoD,kBAApD;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,QAAQ,IAAIC,aAA7C,QAAkE,aAAlE;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAGA,MAAMC,OAAO,GAAG;AACd;AACAC,EAAAA,QAAQ,EAAEL,SAAS,CAACM,aAFN;AAGdC,EAAAA,OAAO,EAAE,IAHK;AAIdC,EAAAA,MAAM,EAAE,MAJM;AAKd;AACAC,EAAAA,UAAU,EAAEV,WAAW,CAACW;AANV,CAAhB;;AASA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBf,EAAAA;AAAnB,CAAD,KAAkC;AAC5CV,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO;AACR,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAIA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAQD,CAbD;;AAiBA,MAAMgB,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAe;AACrCF,EAAAA,eAAe,EAAEE,IAAI,CAACF;AADe,CAAf,CAAxB;;AAIA,eAAetB,OAAO,CAACuB,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAAsCc,GAAtC,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport Header from '../header/header';\nimport LoginForm from '../login-page/login-page';\nimport './app.css';\nimport { connect } from 'react-redux';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport PrivateRoute from '../private-route/private-route';\nimport RegisterForm from '../register-page/register-page';\nimport { getUser } from '../../redux/actions';\nimport HomePage from '../home-page/home-page';\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic';\n\n\nconst options = {\n  // you can also just use 'bottom center'\n  position: positions.BOTTOM_CENTER,\n  timeout: 5000,\n  offset: '30px',\n  // you can also just use 'scale'\n  transition: transitions.SCALE\n}\n\nconst App = ({ isAuthenticated, getUser }) => {\n  useEffect(() => {\n    getUser()\n  }, [getUser])\n\n  return (\n    <Fragment>\n      <Provider>\n\n      </Provider>\n      \n    </Fragment>\n  )\n}\n\n\n\nconst mapStateToProps = ({ auth }) => ({\n  isAuthenticated: auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, { getUser })(App);"]},"metadata":{},"sourceType":"module"}